Program-1

Soumika has a string S and its starting index is 1. 
The string S consists of characters from 1-9. As she is very intelligent, she wants to test his brother Vinay Tendulkar. 
She asked her brother Vinay Tendulkar to count the number of even numbered characters ( i.e 2,4,6,8 ) for every index i

For an index i, the result should be calculated from i to the end of the string. 

As Vinay doesn't know about programming, he wants you to help him find the solution.

Input:
First line contains a string S.

Output:
Print |S| space-separated integers,the result of every index.

Sample Input :
574674546476

Sample Output :
7 7 7 6 5 5 4 4 3 2 1 1

Explanation :

Given string S is .
for index 1
Number of even numbers from 5 to end of the string is 7 so the result of index 1 is 7.
for index 2
Number of even numbers from 7 to end of the string is 7 so the result of index 2 is 7.
for index 3
Number of even numbers from 4 to end of the string is 7 so the result of index 3 is 7.
for index 3
Number of even numbers from 6 to end of the string is 6 so the result of index 4 is 6.....
.
.
.

ex:2
input=64646442
output=8 7 6 5 4 3 2 1

case = 1
input=64646442
output=8 7 6 5 4 3 2 1

case = 2
input =574674546476
output =7 7 7 6 5 5 4 4 3 2 1 1

case = 3
input =246
output =3 2 1

case =4
input =123456
output =3 3 2 2 1 1


   import java.util.*;
     class Test{
         public static void even(String s){
             int i=0,n=s.length(),sum=0;
             int arr[]=new int[n];
             for(i=0;i<n;i++){
                 arr[i]=(int)(s.charAt(i));
             }
             for(i=0;i<n;i++){
                if(arr[i]%2==0){
                    sum++;
                }
            }
            for(i=0;i<n;i++){
                if(arr[i]%2==0){
                    System.out.print(sum+" ");
                    sum--;
                }
                else{
                     System.out.print(sum+" ");
                }
            }
            
        }
        public static void main(String args[]){
            Scanner sc=new Scanner(System.in);
            String s=sc.next();
            even(s);
        }
    }

Program-2

Ramu a School boy given a number 'n' writes it vertically down and writes up again verically up (n-1) lines in increasing order of 1.
He Repeats the above process continously. 


input = 5
output =
1
2 9
3 8 10
4 7 11 14 
5 6 12 13 15



input = 6
output = 
1
2 11
3 10 12
4 9 13 18
5 8 14 17 19
6 7 15 16 20 21




back end test cases
case = 1
input = 7
output =
1
2 13
3 12 14
4 11 15 22
5 10 16 21 23
6 9 17 20 24 27
7 8 18 19 25 26 28



case = 2
input = 1
output = 1

case = 3
input = 4
output = 
1
2 7
3 6 8
4 5 9 10


case = 4
input = 2
1
2

input = 6
output = 
1
2 11
3 10 12
4 9 13 18
5 8 14 17 19
6 7 15 16 20 21





Program-3

Rahul is given a row of numbers where each row and columns are same. 
Rahul now prints the numbers of the rows as shown in the following manner. 
Help Rahul to write the code .

The first line of input consists of the size followed by the row numbers. 

Sample Input:
3
1 2 3 
4 5 6
7 8 9


Explanation:

1<-2<-3 
|
4->5->6
             |
7<-8<-9
   

Sample Output: 
3 2 1 4 5 6 9 8 7


case = 1
input =3
1 2 3
4 5 6
7 8 9
output =3 2 1 4 5 6 9 8 7

case = 2
input =2
1 2
3 4
output =2 1 3 4

case = 3
input =4
1 2 3 4
5 6 7 8
9 8 7 6
5 4 3 2
output =4 3 2 1 5 6 7 8 6 7 8 9 5 4 3 2



     import java.util.*;
     class Test{
         public static void main(String[] args){
             Scanner s=new Scanner(System.in);
             int n=s.nextInt();
             int ar[][]=new int[n][n];
             for(int i=0;i<n;i++){
                 for(int j=0;j<n;j++){
                     ar[i][j]=s.nextInt();
                }
            }
            Snake(n,ar);
            
        }
        static void Snake(int n,int ar[][]){
            for(int i=0;i<n;i++){
                if(i%2==0){
                    for(int j=n-1;j>=0;j--){
                        System.out.print(ar[i][j]+" ");
                    }
                }else{
                    for(int j=0;j<n;j++){
                      System.out.print(ar[i][j]+" ");   
                    }
                }
            }
        }
    }
